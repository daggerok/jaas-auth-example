notifications:
  email: false

env:
  global:
  - TERM=dumb
  - secure: eGHvequbZUpcviQEJMFLhrvQrI/0rAFFiyPGneyhcyzR/1CWG1NxHRCrIox3JuSEHaNfw3PN1rj8aES3IdEFZG06FM7et8M+J9JA6QOcJXvmI+zHcAbQqQP6ft5ho+GSa8ao0QbslKn1CzdoqCk1tU6yZi4jGQC5F5b3AFidEu3JbklNIS8IWkjTrpzEsRtUoso4JunPKZdKivmQY/SCZ9njxg1obhfgrJCLPBxr9h4+xM4KG+O7dka/0a6J2PNzvaHc0FMH3u1FdnSOJ+4rpVk5q4KBT5oGw3kOcukMGUi6YBdmyCWrxffbHgg2wW5t71S9/uEN+w0POtkMcNIvI4T2JrbW4ImLzq4gVb0UvUVUFG1EDP6c51iZQjxVU8NqxYFFrnSTMnZv2IeqlBPHY/bXJqTVkZUSG+ukyXP2FV4Runnaz/oYwW+qZ1Kum9vhfM118j6WvOzT40YF61mlsYBVVXU8uvq1IWMfXgZpfUdmVkyeDsbLvDzNisz8YGp5vC/d8YahafAa2cRNB6QzBVFpDy/R1n3QuXnN5muz9n8MmXIpkON7DZYf8xrANcpLj4ROulOHLaBlEE886T81qhs70HelvYL5PXQRIQlPrS4Y47VAfHLeqq3ZyHNMH8RBZZyEjw+/az4q0E2GpVNR3IMizD0aTIbZXXj+uvhnyjE=

language: java
jdk:
- oraclejdk8
#- oraclejdk10

service:
- docker

addons:
  apt:
    update: true
    sources:
    - google-chrome
    packages:
    - google-chrome-stable
    - google-chrome-stable
    - libappindicator1
    - fonts-liberation
    - bash
    - curl
    - libxml2-utils
    - docker-ce

install: true
before_install:
- export CHROME_BIN=/usr/bin/google-chrome
- export DISPLAY=:99.0
- sh -e /etc/init.d/xvfb start
#
- sudo add-apt-repository universe -y >/dev/null
- echo "deb http://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list >/dev/null
- sudo apt-get update -yqq >/dev/null
- sudo apt-get install -yqq --no-install-suggests --no-install-recommends
  tree jq python-pip curl bash sudo >/dev/null
#
- sudo pip install docker-compose httpie >/dev/null 2>&1
#
- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- stop_any 8080 3000 80 >/dev/null
#
- curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - >/dev/null
- echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list >/dev/null
- sudo apt-get update -yqq >/dev/null
- sudo apt-get install -yqq --no-install-suggests --no-install-recommends yarn >/dev/null

script:
- export root=$(pwd)
#
- bash gradlew >/dev/null
- java -Djava.security.auth.login.config=$(pwd)/src/main/resources/jaas.config -jar ./build/libs/*-all.jar &
- wait_for 8080
- http :8080
- stop_any 8080
#
- bash mvnw clean package >/dev/null
- java -Djava.security.auth.login.config=$(pwd)/src/main/resources/jaas.config -jar target/*-all.jar &
- wait_for 8080
- http :8080
- stop_any 8080

before_cache:
- for item in $(find ~/.gradle -name "*.lock");
    do sudo rm -rf $item ;
  done

cache:
  directories:
  - $HOME/.m2
  - $HOME/.gradle
  - $HOME/.docker

before_deploy:
- cd ${root}
#- ./gradlew documentation
- ./mvnw -Pdocs
- mkdir -p ./target/generated-docs
- cp -Rf ./target/generated-docs/index.html ./target/generated-docs/404.html

deploy:
  provider: pages
  skip-cleanup: true
  # travis encrypt GITHUB_TOKEN=<your github repo token> --add
  github-token: "$GITHUB_TOKEN"
  keep-history: true
  on:
    branch: master
  local-dir: target/generated-docs
  target_branch: gh-pages
